plugins {
    id 'java'
    id 'org.web3j' version '4.9.0'
}
node {
    version = "20.0.0"
}

group 'org.web3j'
version '0.2.0'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


web3j {
    generatedPackageName = "org.web3j.generated.contracts"
    generatedFilesBaseDir = "$projectDir/src"    
    excludedContracts = []
}

ext {
    web3jVersion = '4.12.1'
}

def findSolcPath() {
    try {
        def result = new ByteArrayOutputStream()
        exec {
            commandLine "which", "solc"
            standardOutput = result
        }
        return result.toString().trim()
    } catch (Exception e) {
        println "Warning: Could not find solc executable. Defaulting to hardcoded path."
        return null
    }
}

solidity {
    executable = findSolcPath() ?: "/usr/local/bin/solc" // Fallback if solc isn't found
    version = "0.8.17" // NOTE: without version gradle fails with "Cannot invoke method split() on null object"
    pathRemappings = [ openzeppelin : "lib/openzeppelin-contracts/contracts" ]
    evmVersion = "ISTANBUL"
}

sourceSets {
    main {
        solidity {
            srcDir {
                "src"
            }
        }
    }
}
